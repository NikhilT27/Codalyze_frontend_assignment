[{"/home/nikhilt27/Nikhil/Codalyze/client/src/components/Main.js":"1","/home/nikhilt27/Nikhil/Codalyze/client/src/reportWebVitals.js":"2","/home/nikhilt27/Nikhil/Codalyze/client/src/App.js":"3","/home/nikhilt27/Nikhil/Codalyze/client/src/components/Submited.js":"4"},{"size":7913,"mtime":1610621823462,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1610545817632,"results":"7","hashOfConfig":"6"},{"size":199,"mtime":1610547097020,"results":"8","hashOfConfig":"6"},{"size":1729,"mtime":1610619394433,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hlucro",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"/home/nikhilt27/Nikhil/Codalyze/client/src/components/Main.js",["22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39"],"/home/nikhilt27/Nikhil/Codalyze/client/src/reportWebVitals.js",[],["40","41"],"/home/nikhilt27/Nikhil/Codalyze/client/src/App.js",["42"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n",["43","44"],"/home/nikhilt27/Nikhil/Codalyze/client/src/components/Submited.js",["45","46","47","48","49"],"import React, { useState, useEffect } from \"react\";\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\n\nfunction Submited() {\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n\n  const [rowData, setRowData] = useState([]);\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"refreshSubmitData\") != null) {\n      let data = JSON.parse(sessionStorage.getItem(\"refreshSubmitData\"));\n      setRowData(data);\n    }\n    return () => {};\n  });\n\n  useEffect(() => {\n    if (localStorage.getItem(\"submitedData\") != null) {\n      let data = localStorage.getItem(\"submitedData\");\n      setRowData(JSON.parse(data));\n    }\n    return () => {\n      // localStorage.removeItem(\"submitedData\");\n    };\n  }, [rowData]);\n\n  function updateRows() {\n    console.log(rowData);\n  }\n  const columnDefs = [\n    {\n      headerName: \"Id\",\n      field: \"id\",\n    },\n    {\n      headerName: \"Name\",\n      field: \"name\",\n    },\n    {\n      headerName: \"Email\",\n      field: \"email\",\n    },\n    {\n      headerName: \"Gender\",\n      field: \"gender\",\n    },\n    {\n      headerName: \"DOB\",\n      field: \"dob\",\n    },\n    {\n      headerName: \"Country\",\n      field: \"country\",\n    },\n    {\n      headerName: \"City\",\n      field: \"city\",\n    },\n  ];\n\n  return (\n    <div className=\"ag-theme-alpine main-table-size\">\n      <AgGridReact\n        rowData={rowData}\n        columnDefs={columnDefs}\n        onGridReady={(params) => {\n          setGridApi(params.api);\n          setGridColumnApi(params.columnApi);\n        }}\n      ></AgGridReact>\n    </div>\n  );\n}\n\nexport default Submited;\n",{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":22},{"ruleId":"50","severity":1,"message":"54","line":7,"column":10,"nodeType":"52","messageId":"53","endLine":7,"endColumn":17},{"ruleId":"50","severity":1,"message":"55","line":11,"column":10,"nodeType":"52","messageId":"53","endLine":11,"endColumn":23},{"ruleId":"50","severity":1,"message":"56","line":13,"column":22,"nodeType":"52","messageId":"53","endLine":13,"endColumn":35},{"ruleId":"50","severity":1,"message":"57","line":15,"column":10,"nodeType":"52","messageId":"53","endLine":15,"endColumn":34},{"ruleId":"50","severity":1,"message":"58","line":15,"column":36,"nodeType":"52","messageId":"53","endLine":15,"endColumn":63},{"ruleId":"50","severity":1,"message":"59","line":19,"column":10,"nodeType":"52","messageId":"53","endLine":19,"endColumn":16},{"ruleId":"50","severity":1,"message":"60","line":19,"column":18,"nodeType":"52","messageId":"53","endLine":19,"endColumn":27},{"ruleId":"50","severity":1,"message":"61","line":20,"column":10,"nodeType":"52","messageId":"53","endLine":20,"endColumn":17},{"ruleId":"50","severity":1,"message":"62","line":20,"column":19,"nodeType":"52","messageId":"53","endLine":20,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":81,"column":26,"nodeType":"65","messageId":"66","endLine":81,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":143,"column":3,"nodeType":"52","endLine":143,"endColumn":12,"suggestions":"69"},{"ruleId":"63","severity":1,"message":"64","line":154,"column":23,"nodeType":"65","messageId":"66","endLine":154,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":167,"column":23,"nodeType":"65","messageId":"66","endLine":167,"endColumn":25},{"ruleId":"67","severity":1,"message":"70","line":187,"column":6,"nodeType":"71","endLine":187,"endColumn":21,"suggestions":"72"},{"ruleId":"50","severity":1,"message":"73","line":203,"column":9,"nodeType":"52","messageId":"53","endLine":203,"endColumn":12},{"ruleId":"50","severity":1,"message":"73","line":228,"column":9,"nodeType":"52","messageId":"53","endLine":228,"endColumn":12},{"ruleId":"50","severity":1,"message":"73","line":235,"column":9,"nodeType":"52","messageId":"53","endLine":235,"endColumn":12},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"50","severity":1,"message":"78","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":12},{"ruleId":"74","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":22},{"ruleId":"50","severity":1,"message":"81","line":7,"column":10,"nodeType":"52","messageId":"53","endLine":7,"endColumn":17},{"ruleId":"50","severity":1,"message":"55","line":8,"column":10,"nodeType":"52","messageId":"53","endLine":8,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":12,"column":3,"nodeType":"52","endLine":12,"endColumn":12,"suggestions":"82"},{"ruleId":"50","severity":1,"message":"83","line":30,"column":12,"nodeType":"52","messageId":"53","endLine":30,"endColumn":22},"no-unused-vars","'AgGridColumn' is defined but never used.","Identifier","unusedVar","'GridApi' is defined but never used.","'gridColumnApi' is assigned a value but never used.","'setSubmitData' is assigned a value but never used.","'deleteSelectedRowClicked' is assigned a value but never used.","'setDeleteSelectedRowClicked' is assigned a value but never used.","'newRow' is assigned a value but never used.","'setNewRow' is assigned a value but never used.","'isError' is assigned a value but never used.","'setIsError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRowData'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["84"],"React Hook useEffect has a missing dependency: 'rowData'. Either include it or remove the dependency array. You can also do a functional update 'setRowData(r => ...)' if you only need 'rowData' in the 'setRowData' call.","ArrayExpression",["85"],"'res' is assigned a value but never used.","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'logo' is defined but never used.",["86"],["87"],"'gridApi' is assigned a value but never used.",["88"],"'updateRows' is defined but never used.",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"93"},"Add dependencies array: []",{"range":"94","text":"95"},"Update the dependencies array to be: [addRowClicked, rowData]",{"range":"96","text":"97"},{"range":"98","text":"95"},[3684,3684],", []",[4455,4470],"[addRowClicked, rowData]",[613,613]](() => {}, [submitData, rowData]);\n\n  return (\n    <div>\n      <div className=\"ag-theme-alpine main-table-size\">\n        <div className=\"button-box\">\n          <div className=\"button\">\n            <button onClick={() => onAddRowClick()}>Add Row</button>\n          </div>\n          <div className=\"button\">\n            <button onClick={() => onDeleteSelectedRowsClick()}>\n              Delete Selected Rows\n            </button>\n          </div>\n          <div className=\"button\">\n            <button onClick={() => onDeleteNonSelectedRowsClick()}>\n              Delete Non Selected Rows\n            </button>\n          </div>\n          <div className=\"button\">\n            <button onClick={() => onSubmitClick()}>Submit</button>\n          </div>\n        </div>\n        <AgGridReact\n          rowData={rowData}\n          defaultColDef={defaultColDef}\n          columnDefs={columnDefs}\n          rowSelection=\"multiple\"\n          frameworkComponents={{\n            nameRenderer: NameRenderer,\n          }}\n          onGridReady={(params) => {\n            setGridApi(params.api);\n            setGridColumnApi(params.columnApi);\n          }}\n        ></AgGridReact>\n      </div>\n      {true ? (\n        <div>\n          <Submited />\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n","/home/nikhilt27/Nikhil/Codalyze/client/src/reportWebVitals.js",[],"/home/nikhilt27/Nikhil/Codalyze/client/src/App.js",["44"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n",["45","46"],"/home/nikhilt27/Nikhil/Codalyze/client/src/components/Submited.js",["47","48","49","50","51"],"import React, { useState, useEffect } from \"react\";\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\n\nfunction Submited() {\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n\n  const [rowData, setRowData] = useState([]);\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"refreshSubmitData\") != null) {\n      let data = JSON.parse(sessionStorage.getItem(\"refreshSubmitData\"));\n      setRowData(data);\n    }\n    return () => {};\n  });\n\n  useEffect(() => {\n    if (localStorage.getItem(\"submitedData\") != null) {\n      let data = localStorage.getItem(\"submitedData\");\n      setRowData(JSON.parse(data));\n    }\n    return () => {\n      // localStorage.removeItem(\"submitedData\");\n    };\n  }, [rowData]);\n\n  function updateRows() {\n    console.log(rowData);\n  }\n  const columnDefs = [\n    {\n      headerName: \"Id\",\n      field: \"id\",\n    },\n    {\n      headerName: \"Name\",\n      field: \"name\",\n    },\n    {\n      headerName: \"Email\",\n      field: \"email\",\n    },\n    {\n      headerName: \"Gender\",\n      field: \"gender\",\n    },\n    {\n      headerName: \"DOB\",\n      field: \"dob\",\n    },\n    {\n      headerName: \"Country\",\n      field: \"country\",\n    },\n    {\n      headerName: \"City\",\n      field: \"city\",\n    },\n  ];\n\n  return (\n    <div className=\"ag-theme-alpine main-table-size\">\n      <AgGridReact\n        rowData={rowData}\n        columnDefs={columnDefs}\n        onGridReady={(params) => {\n          setGridApi(params.api);\n          setGridColumnApi(params.columnApi);\n        }}\n      ></AgGridReact>\n    </div>\n  );\n}\n\nexport default Submited;\n","/home/nikhilt27/Nikhil/Codalyze/client/src/index.js",[],{"ruleId":"52","severity":1,"message":"53","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":22},{"ruleId":"52","severity":1,"message":"56","line":7,"column":10,"nodeType":"54","messageId":"55","endLine":7,"endColumn":17},{"ruleId":"52","severity":1,"message":"57","line":11,"column":10,"nodeType":"54","messageId":"55","endLine":11,"endColumn":23},{"ruleId":"52","severity":1,"message":"58","line":13,"column":22,"nodeType":"54","messageId":"55","endLine":13,"endColumn":35},{"ruleId":"52","severity":1,"message":"59","line":15,"column":10,"nodeType":"54","messageId":"55","endLine":15,"endColumn":34},{"ruleId":"52","severity":1,"message":"60","line":15,"column":36,"nodeType":"54","messageId":"55","endLine":15,"endColumn":63},{"ruleId":"52","severity":1,"message":"61","line":19,"column":10,"nodeType":"54","messageId":"55","endLine":19,"endColumn":16},{"ruleId":"52","severity":1,"message":"62","line":19,"column":18,"nodeType":"54","messageId":"55","endLine":19,"endColumn":27},{"ruleId":"52","severity":1,"message":"63","line":20,"column":10,"nodeType":"54","messageId":"55","endLine":20,"endColumn":17},{"ruleId":"52","severity":1,"message":"64","line":20,"column":19,"nodeType":"54","messageId":"55","endLine":20,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":81,"column":26,"nodeType":"67","messageId":"68","endLine":81,"endColumn":28},{"ruleId":"69","severity":1,"message":"70","line":143,"column":3,"nodeType":"54","endLine":143,"endColumn":12,"suggestions":"71"},{"ruleId":"65","severity":1,"message":"66","line":154,"column":23,"nodeType":"67","messageId":"68","endLine":154,"endColumn":25},{"ruleId":"65","severity":1,"message":"66","line":167,"column":23,"nodeType":"67","messageId":"68","endLine":167,"endColumn":25},{"ruleId":"69","severity":1,"message":"72","line":187,"column":6,"nodeType":"73","endLine":187,"endColumn":21,"suggestions":"74"},{"ruleId":"52","severity":1,"message":"75","line":203,"column":9,"nodeType":"54","messageId":"55","endLine":203,"endColumn":12},{"ruleId":"52","severity":1,"message":"75","line":228,"column":9,"nodeType":"54","messageId":"55","endLine":228,"endColumn":12},{"ruleId":"52","severity":1,"message":"75","line":235,"column":9,"nodeType":"54","messageId":"55","endLine":235,"endColumn":12},{"ruleId":"52","severity":1,"message":"76","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":22},{"ruleId":"52","severity":1,"message":"81","line":7,"column":10,"nodeType":"54","messageId":"55","endLine":7,"endColumn":17},{"ruleId":"52","severity":1,"message":"57","line":8,"column":10,"nodeType":"54","messageId":"55","endLine":8,"endColumn":23},{"ruleId":"69","severity":1,"message":"70","line":12,"column":3,"nodeType":"54","endLine":12,"endColumn":12,"suggestions":"82"},{"ruleId":"52","severity":1,"message":"83","line":30,"column":12,"nodeType":"54","messageId":"55","endLine":30,"endColumn":22},"no-unused-vars","'AgGridColumn' is defined but never used.","Identifier","unusedVar","'GridApi' is defined but never used.","'gridColumnApi' is assigned a value but never used.","'setSubmitData' is assigned a value but never used.","'deleteSelectedRowClicked' is assigned a value but never used.","'setDeleteSelectedRowClicked' is assigned a value but never used.","'newRow' is assigned a value but never used.","'setNewRow' is assigned a value but never used.","'isError' is assigned a value but never used.","'setIsError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRowData'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["84"],"React Hook useEffect has a missing dependency: 'rowData'. Either include it or remove the dependency array. You can also do a functional update 'setRowData(r => ...)' if you only need 'rowData' in the 'setRowData' call.","ArrayExpression",["85"],"'res' is assigned a value but never used.","'logo' is defined but never used.","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'gridApi' is assigned a value but never used.",["88"],"'updateRows' is defined but never used.",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"93"},"Add dependencies array: []",{"range":"94","text":"95"},"Update the dependencies array to be: [addRowClicked, rowData]",{"range":"96","text":"97"},{"range":"98","text":"95"},[3684,3684],", []",[4455,4470],"[addRowClicked, rowData]",[613,613]]